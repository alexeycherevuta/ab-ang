@mixin m-build-component--scrollable-base() {
    .m-scrollable  {
        .mCSB_scrollTools .mCSB_dragger .mCSB_dragger_bar {
            @include rounded {
                @include border-radius(array-get($m--border-radius, scrollbar));
            }   
        }
        .mCSB_outside + .mCS-minimal.mCSB_scrollTools_vertical, 
        .mCSB_outside + .mCS-minimal-dark.mCSB_scrollTools_vertical {
            right: -17px;
            margin: 5px 0;
        }
        .mCustomScrollBox.mCS-minimal + .mCSB_scrollTools.mCSB_scrollTools_horizontal, 
        .mCustomScrollBox.mCS-minimal + .mCSB_scrollTools + .mCSB_scrollTools.mCSB_scrollTools_horizontal, 
        .mCustomScrollBox.mCS-minimal-dark + .mCSB_scrollTools.mCSB_scrollTools_horizontal, 
        .mCustomScrollBox.mCS-minimal-dark + .mCSB_scrollTools + .mCSB_scrollTools.mCSB_scrollTools_horizontal {
            margin: 10px 0 0 0;
        }
    }
    .mCustomScrollbar[data-scrollbar-shown=true] {
        &.mCS-autoHide {
            > .mCustomScrollBox ~ .mCSB_scrollTools {
                @include opacity(0.6);
            }
        }
    }
}
@mixin m-build-component--scrollable-skin($skin) {
    @include component-skin(m-scrollable, $skin) {
        .mCS-minimal-dark.mCSB_scrollTools .mCSB_dragger .mCSB_dragger_bar {
            background: get-color($skin, panel, '+');
        }
        .mCS-minimal-dark.mCSB_scrollTools .mCSB_dragger.mCSB_dragger_onDrag .mCSB_dragger_bar{
            background: get-color($skin, panel, '+++');
        }
    }
}
@mixin m-component--scrollable-skin($base, $onDrag) {
    .mCS-minimal-dark.mCSB_scrollTools .mCSB_dragger .mCSB_dragger_bar {
        background: $base;
    }
    .mCS-minimal-dark.mCSB_scrollTools .mCSB_dragger.mCSB_dragger_onDrag .mCSB_dragger_bar{
        background: $onDrag;
    }
}
@include m-build-component--scrollable-base();
@include m-build-component--scrollable-skin(light);
@include m-build-component--scrollable-skin(dark);
